version: '3.9'

services:
  bot:
    image: 'benricheson101/fish-bot'
    depends_on:
      - 'db'
      - 'abusive-user-checker'
      - 'domain-scraper'
      - 'prometheus'
      - 'redis'
    platform: 'linux/x86_64'
    deploy:
      restart_policy:
        condition: 'on-failure'
    environment:
      DATABASE_URL: 'postgres://prisma:prisma@db/fish?connect_timeout=3000&schema=prisma'
      REDIS_URL: 'redis://redis:6379/0'
      PORT: '9000'
      PROMETHEUS_URL: 'http://prometheus:9090'
      GRPC_CHECKER_SERVICE_URL: 'abusive-user-checker:3000'
      NODE_ENV: '${NODE_ENV:-production}'
      DISCORD_TOKEN: '${DISCORD_TOKEN}'
      SHARD_COUNT: '${SHARD_COUNT}'

  abusive-user-checker:
    image: 'benricheson101/fish-abusive-user-service'
    depends_on:
      - 'db'
      - 'prometheus'
    deploy:
      restart_policy:
        condition: 'on-failure'
    environment:
      DATABASE_URL: 'postgres://prisma:prisma@db/fish?sslmode=disable'
      GRPC_ADDR: ':3000'

  domain-scraper:
    image: 'benricheson101/fish-domain-scraper'
    depends_on:
      - 'redis'
      - 'prometheus'
    deploy:
      restart_policy:
        condition: 'on-failure'
    environment:
      PORT: '9000'
      REDIS_URL: 'redis://redis:6379/0'
      API_URL: '${API_URL}'
    healthcheck:
      test: 'curl --fail http://localhost:9000/health'
      interval: '2m30s'
      start_period: '30s'
      retries: 3

  db:
    command: "postgres -c listen_addresses='*'"
    image: 'postgres'
    restart: 'always'
    environment:
      POSTGRES_USER: 'prisma'
      POSTGRES_PASSWORD: 'prisma'
      POSTGRES_DB: 'fish'
    volumes:
      - 'postgres_data:/var/lib/postgres/data'

  redis:
    image: 'redis'
    restart: 'always'
    volumes:
      - 'redis_data:/data'

  grafana:
    image: 'benricheson101/fish-grafana'
    ports:
      - '3000:3000'
    volumes:
      - 'grafana_data:/var/lib/grafana'
    depends_on:
      - 'prometheus'

  prometheus:
    image: 'benricheson101/fish-prometheus'
    volumes:
      - 'prometheus_data:/prometheus'

volumes:
  grafana_data:
  postgres_data:
  prometheus_data:
  redis_data:
