version: '3.9'

services:
  bot:
    build:
      context: '.'
      dockerfile: './services/bot/Dockerfile'
    volumes:
      - './.env:/usr/src/app/.env'
    depends_on:
      - 'db'
      - 'abusive_user_checker'
      - 'prometheus'
    deploy:
      restart_policy:
        condition: 'on-failure'

  abusive_user_checker:
    build:
      context: '.'
      dockerfile: './services/abusive-user-checker/Dockerfile'
    volumes:
      - './.env:/.env'
    depends_on:
      - 'db'
      - 'prometheus'
    deploy:
      restart_policy:
        condition: 'on-failure'

  db:
    command: "postgres -c listen_addresses='*'"
    image: 'postgres'
    restart: 'always'
    environment:
      POSTGRES_USER: 'prisma'
      POSTGRES_PASSWORD: 'prisma'
      POSTGRES_DB: 'fish'
    volumes:
      - 'postgres_data:/var/lib/postgres/data'

  grafana:
    image: 'grafana/grafana'
    ports:
      - '3000:3000'
    volumes:
      - './metrics/fish_dashboard.json:/etc/grafana/provisioning/dashboards/fish_dashboard.json'
      - './metrics/grafana/provisioning:/etc/grafana/provisioning'
      - 'grafana_data:/var/lib/grafana'
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: 'true'
    depends_on:
      - 'prometheus'

  prometheus:
    image: 'prom/prometheus'
    volumes:
      - './metrics/prometheus.yml:/etc/prometheus/prometheus.yml'
      - 'prometheus_data:/prometheus'

volumes:
  postgres_data:
  grafana_data:
  prometheus_data:
